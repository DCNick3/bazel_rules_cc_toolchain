#!/bin/bash

# MIT License
#
# Copyright (c) 2019 Nathaniel Brough
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -euo pipefail
TOOL_PATH="$1"
shift
if [[ -f "$TOOL_PATH" ]]; then
    exec "$TOOL_PATH" "$@"
elif [[ "$0" == "/"* ]]; then
    # Some consumers of `CcToolchainConfigInfo` (e.g. `cmake` from rules_foreign_cc)
    # change CWD and call $CC (this script) with its absolute path.
    # the execroot (i.e. `cmake` from `rules_foreign_cc`) and call CC . For cases like this,
    # we'll try to find our tool relative to this script.
    # This script is at _execroot_/external/_repo_name_/cc_toolchain/wrappers/posix/gcc
    execroot_path="${0%/*/*/*/*/*/*}"
    exec "$execroot_path/$TOOL_PATH" "$@"
else
    >&2 echo "ERROR: could not find $TOOL_PATH; PWD=\"$(pwd)\"; PATH=\"${PATH}\"."
    exit 5
fi
